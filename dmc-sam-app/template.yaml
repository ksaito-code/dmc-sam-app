AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  dmc-sam-app

  Sample SAM Template for dmc-sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
# レコード追加
  DmcPostFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function inserts data into DynamoDB table'
    Properties:
      FunctionName: DmcPostFunction
      Handler: post.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: POST
# レコード削除
  DmcDeleteFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function deletes data in DynamoDB table'
    Properties:
      FunctionName: DmcDelFunction
      Handler: delete.lambda_handler
      Runtime: python3.9
      CodeUri: src/
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: DELETE
# DynamoDB
  DynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: DmcData
# Templates Table
  DmcTemplatesTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "template_id"
          AttributeType: "S"
        - 
          AttributeName: "created_by"
          AttributeType: "S"
        - 
          AttributeName: "created_at"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "template_id"
          KeyType: "HASH"
      TableName: "DmcTemplates"
      BillingMode: "PAY_PER_REQUEST"
      GlobalSecondaryIndexes: 
        - 
          IndexName: "created_by_and_created_at_index"
          KeySchema: 
            - 
              AttributeName: "created_by"
              KeyType: "HASH"
            - 
              AttributeName: "created_at"
              KeyType: "RANGE"
          Projection: 
            ProjectionType: ALL
# User Table
  UsersTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "user_id"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "user_id"
          KeyType: "HASH"
      TableName: "Users"
      BillingMode: "PAY_PER_REQUEST"
# DailyMoods Table
  DailyMoodsTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "user_id"
          AttributeType: "S"
        - 
          AttributeName: "date"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "user_id"
          KeyType: "HASH"
        - 
          AttributeName: "date"
          KeyType: "RANGE"
      TableName: "DailyMoods"
      BillingMode: "PAY_PER_REQUEST"
Outputs:
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'